// padding
@mixin padding($top, $right, $bottom:null, $left:null) {
  @if $left == null and $bottom == null {
    @each $breakpoint, $map in $type-settings {
      @include media-breakpoint-up($breakpoint) {
        padding: leading-calc($top, $map, $breakpoint) leading-calc($right, $map, $breakpoint);
      }
    }
  } @else if $left == null or $left == $right {
    @each $breakpoint, $map in $type-settings {
      @include media-breakpoint-up($breakpoint) {
        padding: leading-calc($top, $map, $breakpoint) leading-calc($right, $map, $breakpoint) leading-calc($bottom, $map, $breakpoint);
      }
    }
  } @else {
    @each $breakpoint, $map in $type-settings {
      @include media-breakpoint-up($breakpoint) {
        padding: leading-calc($top, $map, $breakpoint) leading-calc($right, $map, $breakpoint) leading-calc($bottom, $map, $breakpoint) leading-calc($left, $map, $breakpoint);
      }
    } 
  }
}

@mixin padding-top($number) {
  @each $breakpoint, $map in $type-settings {
    @include media-breakpoint-up($breakpoint) {
      padding-top: leading-calc($number, $map, $breakpoint);
    }
  }
}

@mixin padding-right($number) {
  @each $breakpoint, $map in $type-settings {
    @include media-breakpoint-up($breakpoint) {
      padding-right: leading-calc($number, $map, $breakpoint);
    }
  }
}

@mixin padding-bottom($number) {
  @each $breakpoint, $map in $type-settings {
    @include media-breakpoint-up($breakpoint) {
      padding-bottom: leading-calc($number, $map, $breakpoint);
    }
  }
}

@mixin padding-left($number) {
  @each $breakpoint, $map in $type-settings {
    @include media-breakpoint-up($breakpoint) {
      padding-left: leading-calc($number, $map, $breakpoint);
    }
  }
}

@mixin padding-equal($number) {
  @each $breakpoint, $map in $type-settings {
    @include media-breakpoint-up($breakpoint) {
      padding: leading-calc($bottom, $map, $breakpoint);
    }
  }
}
